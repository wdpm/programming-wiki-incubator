SRP 单一职责
解读：一个类应该尽可能小
1.将大类拆为小类 news_digester_S1.py
  => 大部分倾向于这种方式，因为类本身可以拥有属性（states）。
2.将大类拆为小函数 news_digester_S2.py
  => 一般情况下，不推荐小函数模式。因为函数很可能会参数爆炸，需要疯狂传参数。
  => 对于通用的工具函数，可以使用这种小函数方法。因为不依赖任何状态，纯函数实现最好。

OCP 开闭原则：对扩展开放，对修改关闭
解读：核心是找到代码中容易变化的地方，进行管理。
三种方式
1.子类继承，重写方法，这个方法就是容易变化的地方
=> news_digester_O1.py 重写 interested_in_post()
=> 占用了宝贵的基类。适用于有明确is-a关系的情况。

2.组合/依赖注入，这个依赖的字段就是容易变化的地方
=> news_digester_O2.py 依赖字段是 postFilter
=> 适用于明确适合抽象为函数式接口（has-a）的情况。

3.数据驱动，数据就是容易变化的地方
=> news_digester_O3.py 数据驱动 filter_by_hosts: Optional[List[str]] = None